# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details

version: 2.1

orbs:
  aws-cli: circleci/aws-cli@4.0.0

parameters:
  run_workflow_nightly:
    default: false
    type: boolean
  
  certora_cli_package:
    default: "certora-cli-alpha-master"
    type: string

  path_to_confs:
    default: "certora/CI_tests"
    type: string
  
  prover_version:
    default: "jorge/solana-jsm"
    type: string
      

commands:

  install_conf_runner_infra:
    steps:
      - run:
          name: Install ConfRunnerInfra
          command: pip3.11 install git+ssh://git@github.com/Certora/ConfRunnerInfra.git

  install_certora_cli:
    steps:
      - run:
          name: Get the current master of EVMVerifier with << pipeline.parameters.certora_cli_package >>
          command: pip3.11 install << pipeline.parameters.certora_cli_package >>

  configure_aws:
    steps:
      - aws-cli/setup:
          role_arn: $CIRCLECI_OIDC_CDK_STAGING
          region: $AWS_REGION
          session_duration: '8100'

  install_solana:
    steps:
      - run:
          name: Install Solana v.18.16
          command: |
            sh -c "$(curl -sSfL https://release.anza.xyz/v1.18.16/install)"
            export PATH="$HOME/.local/share/solana/install/active_release/bin:$PATH"

  # platform-tools is installed the first time a Solana project is compiled via cargo build-sbf
  # To force installing it before, we need to run env.sh
  install_platform_tools:
    steps:
      - run:
          name: Install platform-tools
          command: |
            cd /root/.local/share/solana/install/active_release/bin/sdk/sbf
            source env.sh

  install_certora_platform_tools:
    steps:
      - run:
          name: Install Certora platform-tools
          command: |
            source ~/.profile
            export PLATFORM_TOOLS_DIR=$HOME/.cache/solana/v1.41
            mkdir $HOME/platform-tools-certora
            cd $HOME
            wget https://github.com/Certora/certora-solana-platform-tools/releases/download/linux-x86_64-ubuntu-20.04-10-22-2024/platform-tools-linux-x86_64.tar.bz2
            tar -xvjf platform-tools-linux-x86_64.tar.bz2 -C $HOME/platform-tools-certora
            mv $PLATFORM_TOOLS_DIR/platform-tools $PLATFORM_TOOLS_DIR/platform-tools.backup
            ln -sf $HOME/platform-tools-certora $PLATFORM_TOOLS_DIR/platform-tools

  compile:
    steps:
      - run:
          name: Compile Rust To SBF
          command: |
            source ~/.profile
            rustup show
            cd $HOME/repo/programs/manifest
            env RUSTFLAGS="${RUSTFLAGS} -C llvm-args=--sbf-expand-memcpy-in-order -C llvm-args=--combiner-store-merging=false" \
            cargo +solana build-sbf --features certora 

  regression:
    steps:
    - run:
        name: Run Regression Tests
        command: |
          Regression --path << pipeline.parameters.path_to_confs >> \
                    --conf_ignore certora/CI_tests/test_ignore.txt\
                    --prover_version << pipeline.parameters.prover_version >> \
                    --json_flags "{\"use_per_rule_cache\": false, \"unused_summary_hard_fail\": \"on\", \"assert_autofinder_success\": true, \"group_id\": \"$CIRCLE_WORKFLOW_ID\"}" \
                    --checks Verification \
                    --send_message


jobs:
  solana_nightly:
    parameters:
      certora_ci_name:
        type: string
    docker:
      - image: &img public.ecr.aws/certora/cvt-image:2024.10.16-4480-c8870b3
    resource_class: small
    environment:
      CERTORA_DISABLE_AUTO_CACHE: "1"
      CERTORA_CI_CLIENT: << parameters.certora_ci_name >>
    working_directory: ~/repo
    steps:
      
      - checkout

      - install_certora_cli

      - configure_aws

      - install_conf_runner_infra

      - install_solana

      - install_platform_tools

      - install_certora_platform_tools

      - compile

      - regression

      - store_artifacts:
          path: Report.csv
          destination: reports
      
      - store_test_results:
          path: ~/repo



workflows:
  version: 2
  # Nightly builds will run every day at 4am GMT
  nightly:
    triggers:
      - schedule:
          cron: "0 4 * * *"
          filters:
            branches:
              only:
                - certora
    jobs:
      - solana_nightly:
          certora_ci_name: Manifest Nightly
          context: aws_staging

  # run from CircleCI with the boolean parameter run_workflow_nightly set to true
  manual:
    when: << pipeline.parameters.run_workflow_nightly >>
    jobs:
      - solana_nightly:
          certora_ci_name: Manifest Manual
          context: aws_staging
