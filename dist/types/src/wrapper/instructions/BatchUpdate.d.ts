/**
 * This code was GENERATED using the solita package.
 * Please DO NOT EDIT THIS FILE, instead rerun solita to update it or write a wrapper to add functionality.
 *
 * See: https://github.com/metaplex-foundation/solita
 */
import * as beet from '@metaplex-foundation/beet';
import * as web3 from '@solana/web3.js';
import { WrapperBatchUpdateParams } from '../types/WrapperBatchUpdateParams';
/**
 * @category Instructions
 * @category BatchUpdate
 * @category generated
 */
export type BatchUpdateInstructionArgs = {
    params: WrapperBatchUpdateParams;
};
/**
 * @category Instructions
 * @category BatchUpdate
 * @category generated
 */
export declare const BatchUpdateStruct: beet.FixableBeetArgsStruct<BatchUpdateInstructionArgs & {
    instructionDiscriminator: number;
}>;
/**
 * Accounts required by the _BatchUpdate_ instruction
 *
 * @property [_writable_] wrapperState
 * @property [] manifestProgram
 * @property [_writable_, **signer**] owner
 * @property [_writable_] market
 * @category Instructions
 * @category BatchUpdate
 * @category generated
 */
export type BatchUpdateInstructionAccounts = {
    wrapperState: web3.PublicKey;
    manifestProgram: web3.PublicKey;
    owner: web3.PublicKey;
    market: web3.PublicKey;
    systemProgram?: web3.PublicKey;
};
export declare const batchUpdateInstructionDiscriminator = 4;
/**
 * Creates a _BatchUpdate_ instruction.
 *
 * @param accounts that will be accessed while the instruction is processed
 * @param args to provide as instruction data to the program
 *
 * @category Instructions
 * @category BatchUpdate
 * @category generated
 */
export declare function createBatchUpdateInstruction(accounts: BatchUpdateInstructionAccounts, args: BatchUpdateInstructionArgs, programId?: web3.PublicKey): web3.TransactionInstruction;
//# sourceMappingURL=BatchUpdate.d.ts.map